<?php
/**
 * Main module file.
 */

/**
 * Implements hook_menu()
 */
function tweetstream_menu() {
  $items = array();

  $items['api/tweetstream/config'] = array(
    'title' => t('Tweetstream Config'),
    'description' => t('API endpoint for Tweestream json config info'),
    'type' => MENU_CALLBACK,
    'page callback' => 'tweetstream_json_config',
    'file' => 'tweetstream.admin.inc',
    'access callback' => TRUE
  );

  return $items;
}

/**
 * Implements hook_block_info()
 */
function tweetstream_block_info() {
  $blocks['tweetstream'] = array(
    'info' => t('Tweetstream'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function tweetstream_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'tweetstream':
      $tweetstreamURL = variable_get('tweetstream_socketio_url');
      if ($tweetstreamURL) {
        // Only show normal block if url is set
        $path = drupal_get_path('module', 'tweetstream');
        // Add default CSS
        drupal_add_css($path . '/tweetstream.css');

        $socketIOLibraryURL = url($tweetstreamURL . '/socket.io/socket.io.js', array('external' => TRUE));
        $block['content'] = array(
          '#theme' => 'tweetstream',
          '#attached' => array(
            'js' => array(
              $socketIOLibraryURL,
              'https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular.min.js',
              $path . '/tweetstream.js',
            ),
          ),
        );
        // Define settings to pass to Agnular controller.
        $defaultAppRoot = '#block-tweetstream-' . $delta .' .content';
        $appRoot = trim(variable_get('tweetstream_app_root', $defaultAppRoot));
        if (strlen($appRoot < 2)) $appRoot = $defaultAppRoot;

        $js_settings = array(
          'tweetstream' => array(
            'socketioUrl' => variable_get('tweetstream_socketio_url'),
            'appRoot' => $appRoot,
            'numTweets' => variable_get('tweetstream_num_tweets', 5),
            'debug' => variable_get('tweetstream_js_debug', 0),
          ),
        );
        drupal_add_js($js_settings, 'setting');
      } elseif (user_access('administer blocks')) {
        // Let let user with 'administer blocks' permission know that block needs configured
        $configURL = 'admin/structure/block/manage/tweetstream/tweetstream/configure';
        $optArray = array(
          '!url' => l( t('Tweetstream block'),
            $configURL,
            array( 'query' => array('destination' => current_path() ))
          )
        );
        $adminMsg = t(
          '!url needs a socket.io URL before it can display',
          $optArray
        );
        drupal_set_message($adminMsg, 'warning');
      }
      break;
  }

  return $block;
}

/**
 * Implements hook_block_configure()
 */
function tweetstream_block_configure($delta = '') {
  $form = array();
  if ($delta == 'tweetstream') {
    $form['tweetstream_socketio_url'] = array(
      '#type' => 'textfield',
      '#required' => true,
      '#title' => t('Socket.io URL'),
      '#description' => t('The URL of your Node.js Socket.io server'),
      '#size' => 60,
      '#default_value' => variable_get('tweetstream_socketio_url')
    );

    $form['tweetstream_js_debug'] = array(
      '#type' => 'radios',
      '#title' => t('JavaScript Debugging'),
      '#default_value' => variable_get('tweetstream_js_debug', 0),
      '#options' => array(0 => t('Disabled'), 1 => t('Enabled')),
      '#description' => t('Instructs JavaScript to log additional information (like incoming tweets) using console.log function. Useful for theming. Disable for production.'),
    );

    $form['tweetstream_num_tweets'] = array(
      '#type' => 'textfield',
      '#title' => t('Number of tweets to display'),
      '#size' => 2,
      '#description' => t('The number of tweets to display in the block..'),
      '#default_value' => variable_get('tweetstream_num_tweets',  5),
    );

    $form['tweetstream_track'] = array(
      '#type' => 'textfield',
      '#title' => t('Track'),
      '#size' => 60,
      '#description' => t('A comma-separated list of terms contained in the tweets to search for.'),
      '#default_value' => variable_get('tweetstream_track',  ''),
    );

    $form['tweetstream_follow'] = array(
      '#type' => 'textfield',
      '#title' => t('Follow'),
      '#size' => 60,
      '#description' => t('A comma-separated list of user IDs, indicating the users whose Tweets should be delivered on the stream.'),
      '#default_value' => variable_get('tweetstream_follow',  ''),
    );

    $form['tweetstream_app_root'] = array(
      '#type' => 'textfield',
      '#title' => t('Override Angular Root'),
      '#description' => t('By default, Tweetstream targets the #block-tweetstream-tweetstream .content div but you can override it here.'),
      '#size' => 60,
      '#default_value' => variable_get('tweetstream_app_root')
    );

  }

  return $form;
}

/**
 * Implements hook_block_save()
 */
function tweetstream_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'tweetstream') {
    // Have Drupal save the string to the database.
    variable_set('tweetstream_socketio_url', $edit['tweetstream_socketio_url']);
    variable_set('tweetstream_js_debug', intval( $edit['tweetstream_js_debug'] ));
    variable_set('tweetstream_num_tweets', $edit['tweetstream_num_tweets']);
    variable_set('tweetstream_track', $edit['tweetstream_track']);
    variable_set('tweetstream_follow', $edit['tweetstream_follow']);
    variable_set('tweetstream_app_root', $edit['tweetstream_app_root']);
  }

  return;
}

/**
 * Implements hook_theme()
 */
function tweetstream_theme() {
  return array(
    'tweetstream' => array(
      'template' => 'tweetstream',
      'variables' => array(),
    ),
  );
}
